(function() {var implementors = {};
implementors["chalk_ir"] = [];
implementors["chalk_solve"] = [{"text":"impl&lt;'i, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/canonicalize/struct.Canonicalizer.html\" title=\"struct chalk_solve::infer::canonicalize::Canonicalizer\">Canonicalizer</a>&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::canonicalize::Canonicalizer"]},{"text":"impl&lt;'i, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/invert/struct.Inverter.html\" title=\"struct chalk_solve::infer::invert::Inverter\">Inverter</a>&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::invert::Inverter"]},{"text":"impl&lt;'i, '_, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/normalize_deep/struct.DeepNormalizer.html\" title=\"struct chalk_solve::infer::normalize_deep::DeepNormalizer\">DeepNormalizer</a>&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::normalize_deep::DeepNormalizer"]},{"text":"impl&lt;'i, '_, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UCollector.html\" title=\"struct chalk_solve::infer::ucanonicalize::UCollector\">UCollector</a>&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::ucanonicalize::UCollector"]},{"text":"impl&lt;'i, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UMapToCanonical.html\" title=\"struct chalk_solve::infer::ucanonicalize::UMapToCanonical\">UMapToCanonical</a>&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::ucanonicalize::UMapToCanonical"]},{"text":"impl&lt;'i, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/ucanonicalize/struct.UMapFromCanonical.html\" title=\"struct chalk_solve::infer::ucanonicalize::UMapFromCanonical\">UMapFromCanonical</a>&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::ucanonicalize::UMapFromCanonical"]},{"text":"impl&lt;'i, '_, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/infer/unify/struct.OccursCheck.html\" title=\"struct chalk_solve::infer::unify::OccursCheck\">OccursCheck</a>&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::infer::unify::OccursCheck"]},{"text":"impl&lt;'i, '_, I:&nbsp;<a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt; <a class=\"trait\" href=\"chalk_ir/fold/trait.Folder.html\" title=\"trait chalk_ir::fold::Folder\">Folder</a>&lt;'i, I, I&gt; for <a class=\"struct\" href=\"chalk_solve/solve/truncate/struct.Truncater.html\" title=\"struct chalk_solve::solve::truncate::Truncater\">Truncater</a>&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":["chalk_solve::solve::truncate::Truncater"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()